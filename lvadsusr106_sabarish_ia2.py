# -*- coding: utf-8 -*-
"""LVADSUSR106-Sabarish-IA2

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1eBuQnbcgE6HNSEFYCNqATmAmruaBieuw
"""

import numpy as np
import pandas as pd

#1
rgb_image = np.array([[[255,0,0],[0,255,0],[0,0,255]],[[255,255,0],[255,0,255],[0,255,255]],[[127,127,127],[200,200,200],[50,50,50]]])
for i in rgb_image:
  for j in i:
    gray_scale = round((j[0] * 0.2989 + j[1] * 0.5870 + j[2] * 0.1140),2)
    print(f'GrayScale for {j} is {gray_scale}')

#2
def normal(data):
    means = np.mean(data, axis=0)
    stds = np.std(data, axis=0)
    normalized_data = (data - means) / stds
    return normalized_data
data = np.array([[100, 200, 300],
                 [400, 500, 600],
                 [700, 800, 900]])
normalized_data = normal(data)
print("Data:")
print(data)
print("\nNormalized data:")
print(normalized_data)

#3
sensor_data = np.array([[[255,0,0],[0,255,0],[0,0,255]],[[255,255,0],[255,0,255],[0,255,255]],[[127,127,127],[200,200,200],[50,50,50]]])
for i in sensor_data:
  print(i.flatten())

#4
data = np.array([['Hari',200,100,213,133],['Jagan',130,100,232,123],['Jessy',200,200,213,132],['Ram',200,200,123,142]])
df = pd.DataFrame(data,columns=['Name','Round_1','Round_2','Round_3','Round_4'])
print(df)

#5

#6

#7
data = {'Name': ['Alice','Bob','Charlie','David','Eve','Frank','Grace'],
        'Age': [25,30,35,40,45,50,55],
        'City': ['NY','LA','Chicago','Houston','Phoenix','Miami','Boston'],
        'Department': ['HR','IT','Finance','Marketing','Sales','IT','HR']}
df = pd.DataFrame(data)
filtered = (df['Age'] < 45) & (df['Department'] != 'HR')
columns = ['Name','City']
res = df.loc[filtered,columns]
print(res)

#8
data = pd.read_csv('/content/sample_data/Q8.csv')
df = pd.DataFrame(data)
filtered = df['Category'] == 'Fruit'
res = df.loc[filtered]
avg_price = res['Price'].mean()
filtered_res = (res['Price'] > avg_price) & (res['Promotion'] == False)
out = res.loc[filtered_res]
print(out)

#9
emp_data = {'Employee': ['Alice','Bob','Charlie','David'],
            'Department': ['HR','IT','Finance','IT'],
            'Manager':['John','Emily','John','Emily']}
emp_df = pd.DataFrame(emp_data)

project = {'Employee': ['Alice','Bob','Charlie'],
           'Project': ['P1','P2','P3']}
proj_df = pd.DataFrame(project)

merged_res = pd.merge(emp_df,proj_df,on='Employee',how='left')
print(merged_res)

#10
data = {'Department': ['Electronics','Electronics','Clothing','Clothing','Home Goods'],
        'Sales Person': ['Alice','Bob','Charlie','David','Eve'],
        'Sales': [70000,50000,30000,40000,60000]}
df = pd.DataFrame(data)
dept = df.groupby('Department')['Sales'].mean().reset_index().rename(columns={'Sales':'Avg_Sales'})
dept['Rank'] = np.arange(1,len(dept)+1)
print(dept)

